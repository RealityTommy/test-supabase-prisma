// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "auth"]
}

// User model
model user {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String?
  email     String   @unique
  phone     String?
  phoneCall Boolean?
  phoneText Boolean?

  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt

  profiles          profile[]
  organizationUsers organizationUsers[]

  @@schema("public")
}

// Profile model
model profile {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  displayName String?
  email       String?
  phone       String?
  phoneCall   Boolean?
  phoneText   Boolean?

  user   user?   @relation(fields: [userId], references: [id])
  userId String? @db.Uuid

  organization   organization? @relation(fields: [organizationId], references: [id])
  organizationId String?       @db.Uuid

  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt

  links       profileLink[]
  socialMedia profileSocialMedia[]

  @@schema("public")
}

// Profile link model
model profileLink {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profile   profile @relation(fields: [profileId], references: [id])
  profileId String  @db.Uuid

  link String

  createdAt DateTime @default(dbgenerated("now()"))

  @@schema("public")
}

// Profile social media model
model profileSocialMedia {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  profile   profile @relation(fields: [profileId], references: [id])
  profileId String  @db.Uuid

  socialMedia socialMediaPlatform

  link String

  createdAt DateTime @default(dbgenerated("now()"))

  @@schema("public")
}

// Organization model
model organization {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique

  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt

  profiles profile[]

  organizationUsers organizationUsers[]

  @@schema("public")
}

// Organization users model
model organizationUsers {
  @@id([organizationId, userId])

  organization   organization @relation(fields: [organizationId], references: [id])
  organizationId String       @db.Uuid

  user   user   @relation(fields: [userId], references: [id])
  userId String @db.Uuid

  role OrganizationRole @default(MEMBER)

  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt

  @@schema("public")
}

enum socialMediaPlatform {
  FACEBOOK
  X
  INSTAGRAM
  LINKEDIN
  YOUTUBE

  @@schema("public")
}

enum OrganizationRole {
  ADMIN
  MEMBER

  @@schema("public")
}
